version: "3.5"

services:
  server:
    image: container-registry.oracle.com/database/enterprise:12.2.0.1-slim
    container_name: galaxy-database-oracle
    environment:
      - ORACLE_SID=ORCLCDB
      - ORACLE_EDITION=standard # enterprise
      - ORACLE_PWD=oracle
    volumes:
      - "/home/natanael/developer/java-dev/docker/docker-volumes/data/oracledb-12.0.1-slim:/ORCL" 
      # Validar si es por el uso de la version SLIM, en la documentacion indica que la data esta en /opt/oracle/oradata
      #- "/home/natanael/developer/java-dev/docker/docker-volumes/data/oracledb-12.0.1-slim:/opt/oracle/oradata"
    ports:
      - "1522:1521"
      - "5501:5500"
    networks:
    - net-galaxy-ms
  mysql:
    image: mysql:8.0.29
    container_name: galaxy-database-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: GALAXY_MS_2022_CLIENTES
      MYSQL_USER: GALAXY_MS_2022_CLIENTES
      MYSQL_PASSWORD: mysql
    ports:
    - 3307:3306
    - 33061:33060
    volumes:
      - "/home/natanael/developer/java-dev/docker/docker-volumes/data/mysqldb-8:/var/lib/mysql"
    networks:
    - net-galaxy-ms
  postgres:
    image: postgres:alpine3.14
    container_name: galaxy-database-postgres
    restart: always
    environment:
    - POSTGRES_PASSWORD=postgres
    ports:
    - 5434:5432
    volumes:
      - "/home/natanael/developer/java-dev/docker/docker-volumes/data/postgres-alpine3:/var/lib/postgresql/data"
    networks:
    - net-galaxy-ms
  mongo:
    image: mongo:5.0.2
    container_name: galaxy-database-mongo
    restart: always
    environment:
    - MONGO_INITDB_ROOT_USERNAME=mongo
    - MONGO_INITDB_ROOT_PASSWORD=mongo
    ports:
    - 27018:27017
    networks:
    - net-galaxy-ms
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: galaxy-zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
    - net-galaxy-ms
  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: galaxy-kafka-1
    depends_on:
      - zookeeper-1
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
    - net-galaxy-ms
  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: galaxy-kafka-2
    depends_on:
      - zookeeper-1
    ports:
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
    - net-galaxy-ms
  redis:
    image: redis:6.2.6
    command: --requirepass redis123
    container_name: galaxy-database-redis
    restart: always
    environment:
    - REDIS_PASSWORD=redis123
    ports:
    - 6379:6379
    networks:
    - net-galaxy-ms
  jaeger:
    image: jaegertracing/all-in-one:1.36
    container_name: galaxy-tracing-jaeger
    restart: on-failure
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
    - net-galaxy-ms
networks:
  net-galaxy-ms:
    name: net-galaxy-ms-db

